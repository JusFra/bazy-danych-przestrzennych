CREATE EXTENSION postgis;

CREATE TABLE buildings
(
id			INTEGER, 
geometry	GEOMETRY, 
name		VARCHAR
);

CREATE TABLE roads
(
id			INTEGER, 
geometry	GEOMETRY, 
name		VARCHAR
);

CREATE TABLE poi
(
id			INTEGER, 
geometry	GEOMETRY, 
name		VARCHAR
);

INSERT INTO buildings (id, geometry, name)
	VALUES 	( 1, ST_GeomFromText('POLYGON((8 4, 10.5 4, 10.5 1.5, 8 1.5, 8 4))'), 'BuildingA'),
			( 2, ST_GeomFromText('POLYGON((4 5, 6 5, 6 7, 4 7, 4 5))'), 'BuildingB'),
			( 3, ST_GeomFromText('POLYGON((3 8, 5 8, 5 6, 3 6, 3 8))'), 'BuildingC'),
			( 4, ST_GeomFromText('POLYGON((9 9, 10 9, 10 8, 9 8, 9 9))'), 'BuildingD'),
			( 5, ST_GeomFromText('POLYGON((1 2, 2 2, 2 1, 1 1, 1 2))'), 'BuildingF')
			
SELECT * FROM buildings

INSERT INTO roads (id, geometry, name)
	VALUES 	( 1, ST_GeomFromText('LINESTRING(0 4.5, 12 4.5)'), 'RoadX'),
			( 1, ST_GeomFromText('LINESTRING(7.5 10.5, 7.5 0)'), 'RoadY')
			
SELECT * FROM roads

INSERT INTO poi (id, geometry, name)
	VALUES 	( 1, ST_GeomFromText('POINT(1 3.5)'), 'G'),
			( 1, ST_GeomFromText('POINT(5.5 1.5)'), 'H'),
			( 1, ST_GeomFromText('POINT(9.5 6)'), 'I'),
			( 1, ST_GeomFromText('POINT(6.5 6)'), 'J'),
			( 1, ST_GeomFromText('POINT(6 9.5)'), 'K')
			
SELECT * FROM poi

-- 6a.	Wyznacz całkowitą długość dróg w analizowanym mieście.  
SELECT SUM(ST_Length(geometry)) AS  roadLenght
FROM roads;

 -- 6b. b.	Wypisz geometrię (WKT), pole powierzchni oraz obwód poligonu reprezentującego budynek o nazwie BuildingA. 
SELECT name, ST_AsText(geometry) AS geometry, ST_Area(geometry) AS area, ST_Perimeter(geometry) AS perimeter
FROM buildings
WHERE name = 'BuildingA';

-- 6c.	Wypisz nazwy i pola powierzchni wszystkich poligonów w warstwie budynki. Wyniki posortuj alfabetycznie.
SELECT name, ST_Area(geometry) AS area 
FROM buildings
ORDER BY name

-- 6d.	Wypisz nazwy i obwody 2 budynków o największej powierzchni.  
SELECT name, ST_Perimeter(geometry) AS perimeter
FROM buildings
ORDER BY ST_Area(geometry) desc
LIMIT 2

-- 6e.	Wyznacz najkrótszą odległość między budynkiem BuildingC a punktem G.  
SELECT ST_Distance(buildings.geometry, poi.geometry) AS distance
FROM buildings, poi
WHERE buildings.name = 'BuildingC' AND poi.name = 'G';

-- 6f.	Wypisz pole powierzchni tej części budynku BuildingC, która znajduje się w odległości większej niż 0.5 od budynku BuildingB.									
SELECT ST_Area(ST_Difference((SELECT b.geometry FROM buildings b WHERE b.name = 'BuildingC'), 
			   ST_Buffer((SELECT b.geometry FROM buildings b WHERE b.name = 'BuildingB'), 0.5))) AS area;
	
-- 6g.	Wybierz te budynki, których centroid (ST_Centroid) znajduje się powyżej drogi o nazwie RoadX.  
SELECT name
FROM buildings
WHERE ST_Y(ST_Centroid(buildings.geometry)) > (SELECT ST_Y(ST_StartPoint(geometry)) FROM roads WHERE name = 'RoadX')

-- 8. Oblicz pole powierzchni tych części budynku BuildingC i poligonu o współrzędnych (4 7, 6 7, 6 8, 4 8, 4 7), 
-- 	które nie są wspólne dla tych dwóch obiektów.
SELECT ST_Area(ST_SymDifference(b.geometry, ST_GeomFromText('POLYGON((4 7, 6 7, 6 8, 4 8, 4 7))')))
FROM buildings b
WHERE b.name = 'BuildingC'
			
	

			
			
			
			
			
			